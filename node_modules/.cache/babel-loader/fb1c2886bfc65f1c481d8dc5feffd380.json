{"ast":null,"code":"var _jsxFileName = \"/home/vikram/demo-project-google-login/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { setToken, getToken } from '../helpers/Token';\nimport GoogleLogin from 'react-google-login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientId = '474969311588-13ag3eslpe33moc6fra535uk2lhrnl8e.apps.googleusercontent.com';\n\nconst Login = () => {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const [googleResponse, setGoogleResponse] = useState('');\n  const [session, setSession] = useState('');\n\n  const responseGoogle = response => {\n    console.log(response);\n\n    if (response.tokenId) {\n      setGoogleResponse(response.tokenId);\n      setMessage('Logged In Success');\n      setToken('login_Token', response.tokenId);\n      const sessionToken = getToken('login_Token');\n      setSession(sessionToken);\n    }\n\n    if (response.error) {\n      setGoogleResponse(response.details);\n      setMessage('Logged In Failure');\n    }\n  };\n\n  console.log(`token value: ${session}`);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"LOGIN COMPONENT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: clientId,\n      buttonText: \"Login\",\n      onSuccess: responseGoogle,\n      onFailure: responseGoogle,\n      cookiePolicy: 'single_host_origin'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [message, googleResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Reported Token:-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: googleResponse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: session && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Fetched Session Token:-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: session\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"tg/bV/++Tj8VNJPaEjudXhqh524=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/vikram/demo-project-google-login/src/components/Login.js"],"names":["React","useState","setToken","getToken","GoogleLogin","clientId","Login","message","setMessage","googleResponse","setGoogleResponse","session","setSession","responseGoogle","response","console","log","tokenId","sessionToken","error","details"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,kBAAnC;AACA,OAAOC,WAAP,MAAwB,oBAAxB;;AAEA,MAAMC,QAAQ,GAAG,0EAAjB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMY,cAAc,GAAIC,QAAD,IAAc;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,QAAIA,QAAQ,CAACG,OAAb,EAAsB;AAClBP,MAAAA,iBAAiB,CAACI,QAAQ,CAACG,OAAV,CAAjB;AACAT,MAAAA,UAAU,CAAC,mBAAD,CAAV;AACAN,MAAAA,QAAQ,CAAC,aAAD,EAAgBY,QAAQ,CAACG,OAAzB,CAAR;AACA,YAAMC,YAAY,GAAGf,QAAQ,CAAC,aAAD,CAA7B;AACAS,MAAAA,UAAU,CAACM,YAAD,CAAV;AACH;;AACD,QAAIJ,QAAQ,CAACK,KAAb,EAAoB;AAChBT,MAAAA,iBAAiB,CAACI,QAAQ,CAACM,OAAV,CAAjB;AACAZ,MAAAA,UAAU,CAAC,mBAAD,CAAV;AACH;AACJ,GAbD;;AAcAO,EAAAA,OAAO,CAACC,GAAR,CAAa,gBAAeL,OAAQ,EAApC;AAEA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,WAAD;AACI,MAAA,QAAQ,EAAEN,QADd;AAEI,MAAA,UAAU,EAAC,OAFf;AAGI,MAAA,SAAS,EAAEQ,cAHf;AAII,MAAA,SAAS,EAAEA,cAJf;AAKI,MAAA,YAAY,EAAE;AALlB;AAAA;AAAA;AAAA;AAAA,YAFJ,eASI;AAAA,iBACKN,OADL,EAEKE,cAAc,iBACX;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHR;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,eAkBI;AAAA,gBACKE,OAAO,iBACJ;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CAlDD;;GAAML,K;;KAAAA,K;AAoDN,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport { setToken, getToken } from '../helpers/Token'\nimport GoogleLogin from 'react-google-login';\n\nconst clientId = '474969311588-13ag3eslpe33moc6fra535uk2lhrnl8e.apps.googleusercontent.com'\n\nconst Login = () => {\n    const [message, setMessage] = useState('');\n    const [googleResponse, setGoogleResponse] = useState('');\n    const [session, setSession] = useState('');\n\n    const responseGoogle = (response) => {\n        console.log(response);\n        if (response.tokenId) {\n            setGoogleResponse(response.tokenId)\n            setMessage('Logged In Success')\n            setToken('login_Token', response.tokenId)\n            const sessionToken = getToken('login_Token')\n            setSession(sessionToken)\n        }\n        if (response.error) {\n            setGoogleResponse(response.details)\n            setMessage('Logged In Failure')\n        }\n    }\n    console.log(`token value: ${session}`)\n\n    return (\n        <div>\n            <h2>LOGIN COMPONENT</h2>\n            <GoogleLogin\n                clientId={clientId}\n                buttonText=\"Login\"\n                onSuccess={responseGoogle}\n                onFailure={responseGoogle}\n                cookiePolicy={'single_host_origin'}\n            />\n            <div>\n                {message}\n                {googleResponse &&\n                    <div>\n                        <h4>Reported Token:-</h4>\n                        <p>{googleResponse}</p>\n                    </div>\n                }\n            </div>\n            <div>\n                {session &&\n                    <div>\n                        <h4>Fetched Session Token:-</h4>\n                        <p>{session}</p>\n                    </div>\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}